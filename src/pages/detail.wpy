<template>
    <div>
        <div class="page_" @click.self="shareBol=false">
            <topNavBar></topNavBar>
            <div>
                <video id="myVideo" v-if="detailInfo.courseType == 1&&videoUrl" src="{{videoUrl}}" controls="true" objectFit="contain" @pause="pause" @waiting="waiting" @play="handlePlay" @error="error" @ended="handleVideoEnded">
                                                                                                                                                                        </video>
                <div v-else-if="detailInfo.courseType == 2&&videoUrl">
                    <customAudio @ended="handleVideoEnded" :source="medioInfo"></customAudio>
                </div>
                <image class="poster_" mode="widthFix" v-else src="{{detailInfo.videoCoverUrl}}"></image>
            </div>
            <div class="intro_bar_">
                <div>
                    <image class="icon-image" src="{{teacherInfo.avatarUrl}}"></image>
                    <div class="left_">
                        <label>{{teacherInfo.tutorName}}</label>
                        <p class="desc_">{{teacherInfo.briefIntroduction}}</p>
                    </div>
                </div>
                <div>
                    <button @click="handleAttention" class="btn_like_ {{attentioned ? 'liked_' : ''}}" size="defult" type="defult">
                                                                                                                                                                              {{!attentioned ? '+关注' : '已关注'}}
                                                                                                                                                                            </button>
                </div>
            </div>
            <div class="share_div">
                <menus @change="handleMenuChange" :activeIndex="type" :list="menus" :share='true'></menus>
                <img src="/static/img/fenxiang.png" @click.stop="shareClick()" class="share_img" alt="">
            </div>
            <div v-if="type == 1" class="detail_">
                <h3 class="title_">课程介绍</h3>
                <p>
                    {{detailInfo.briefIntroduction}}
                </p>
                <div class="line_"></div>
                <h3 class="title_">适合人群</h3>
                <p>
                    {{detailInfo.suitablePeople}}
                </p>
            </div>
            <div v-else-if="type == 2" class="detail_ list_wrap_ course_list_">
                <h3 class="title_">课程列表</h3>
                <div class="desc_">更新完成/共{{detailInfo.videoNumber}}期</div>
                <ul>
                    <li @click="handleCourseChange(item)" v-for="item in detailInfo.mySchoolVideoList" class="item_">
                        <div class="sub_title_">{{item.videoName}}</div>
                        <div class="sub_desc_">
                            <!-- 时长 暂无 |  -->
                            <!-- {{item.studiedNumber}}次学习 -->
                        </div>
                    </li>
                </ul>
            </div>
            <div v-else-if="type == 3">
                <div class="detail_ list_wrap_ comment_">
                    <h3 class="title_">共有{{comments.length}}条评论</h3>
                    <!-- <div @click="showComment=true" class="btn_comment_"><image class="img_" src="/static/img/12.png"></image>写评论</div> -->
                    <!-- <div class="desc_">更新完成/共6期</div> -->
                    <div class="input_wrap_">
                        <div class="left_">
                            <image class="icon-image" style="margin-top:10rpx" src="{{avatarUrl}}"></image>
                            <input @click="replyCommentsTwo()" disabled minlength="10" class="input_comment_" placeholder="请输入您对课程的评价" placeholder-class="phc_">
                        </div>
                        <!-- <view><button @click="handleCommentBlur" size="defult" type="defult" class="btn_submit_comment_">发表</button></view> -->
                    </div>
                    <ul>
                        <li v-for="(item,index) in comments" class="item_pj">
                            <div class="item_header">
                                <image class="icon-image" src="{{item.avatarUrl}}"></image>
                                <div class="intro_">
                                    <div class="sub_title_" style="color:#999999">{{item.nickname}}</div>
                                    <div class="sub_desc_" style="color:#3E3E3E">{{item.evaluation}}<br><span style="white-space:nowrap;color:#999999;font-size:22rpx;font-weight: 400;">{{item.createTime}}</span></div>
                                </div>
                                <div style="width:70rpx">
                                    <image @click="handleLike(item)" src="{{item.liked ? '/static/img/7.png' : '/static/img/8.png'}}" class="btn_like_" />
                                    <div v-if="item.likeNumber > 0" class="LikeNum">{{item.likeNumber}}</div>
                                </div>
                            </div>
                            <div class="sub_adminReply" v-if="item.adminReply">管理员回复:{{item.adminReply}}</div>
                            <!-- <div class="sub_listReply" v-if="item.commit>indexs" v-for="(items,indexs) in item.children">
                                    <div class="items-header">
                                        <image class="icon-little-image" src="{{items.avatarUrl}}" /> <span class="replyNick">{{items.idNick}}</span></div>
                                    <div class="items-details" @click="replyComments(items,item,index)">
                                        <p><span style="color:#3E3E3E" v-if="items.parentIdNick != item.nickname">回复<span style="color:#999999">{{items.parentIdNick}}:</span></span>
                                            <span style="color:#3E3E3E;font-weight: 600;">{{items.evaluation}} </span><span style="padding-left:10rpx;white-space:nowrap;font-size:22rpx;color:#999999;font-weight: 400;"> {{items.createTime}}</span>
                                        </p>
                                    </div>
                                    <div class="items-like">
                                        <image @click="handleLike(items,index)" src="{{items.liked ? '/static/img/7.png' : '/static/img/8.png'}}" class="btn_like_" />
                                        <div v-if="items.likeNumber > 0" class="LikeNum">{{items.likeNumber}}</div>
                                    </div>
                                </div>
                                <div v-if="item.children.length>item.commit" @click="showMore(item,index)" class="moreCommit">展开{{item.children.length-item.commit}}条回复</div> -->
                        </li>
                    </ul>
                    <div class="desc-foot">--没有更多评论--</div>
                </div>
            </div>
            <div v-else-if="type == 4" class="detail_ list_wrap_ other_course_">
                <h3 class="title_">其他课程推荐</h3>
                <courseList theme="white"></courseList>
            </div>
        </div>
        <replyComments :comments='replycomment' @replyComments="replyFn" @hide="hide" :showMask="showMask" :root="root"></replyComments>
        <share v-if='shareBol' :sharePoster='sharePoster'></share>
    </div>
</template>

<style lang="scss" scoped>
    .desc-foot {
        font-size: 24rpx;
        font-family: PingFang SC;
        font-weight: 400;
        color: #3E3E3E;
        text-align: center;
        line-height: 34rpx;
    }
    .page_ {
        .items-header {
            display: flex;
            float: left;
            width: 100%;
            .icon-little-image {
                width: 40rpx;
                height: 40rpx;
                margin-right: 10rpx;
            }
        }
        .LikeNum {
            margin-top: -4rpx;
            text-align: center
        }
        .moreCommit {
            padding-left: 89rpx;
            color: #617FB8;
            font-size: 24rpx
        }
        .items-details {
            margin-left: 50rpx;
            margin-right: 80rpx;
            word-wrap: break-word;
            word-break: break-all;
            label {
                word-wrap: break-word;
                word-break: break-all;
            }
        }
        .items-like {
            display: block;
            position: absolute;
            right: 6rpx;
            top: 10rpx;
            width: 60rpx;
        }
        .share_div {
            position: relative;
            .share_img {
                position: absolute;
                right: 5px;
                top: -15px;
                width: 70px;
                height: 90px;
            }
        }
        .audio_wrap_ {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 40rpx 0;
        }
        .phc_ {
            font-size: 25rpx;
            font-family: PingFang SC;
            font-weight: 400;
            color: #999999;
        }
        .poster_ {
            width: 100%;
            height: auto;
        }
        video {
            width: 100%;
        }
        .intro_bar_ {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 28rpx;
            background: #FFFFFF;
            box-shadow: 0px 6rpx 23rpx 5rpx rgba(214, 214, 223, 0.35);
            image {
                width: 69rpx;
                height: 69rpx;
                vertical-align: top;
            }
            .left_ {
                display: inline-block;
                margin-left: 37rpx;
                max-width: 400rpx;
                word-break: break-all;
                label {
                    display: block;
                    height: 28rpx;
                    line-height: 28rpx;
                    font-size: 30rpx;
                    font-family: PingFang SC;
                    font-weight: bold;
                    color: #333333;
                }
                .desc_ {
                    font-size: 25rpx;
                    font-family: PingFang SC;
                    font-weight: 400;
                    color: #999999;
                    margin-top: 12rpx;
                }
            }
            .btn_like_ {
                height: 55rpx;
                line-height: 55rpx;
                background: linear-gradient(90deg, #EAD19C, #E5C27C);
                border-radius: 7rpx;
                font-size: 25rpx;
                font-family: PingFang SC;
                font-weight: 600;
                color: #9C733E;
                text-align: center;
                border: none;
                &.liked_ {
                    background: #EDE1C8;
                }
                &::after {
                    display: none;
                }
            }
        }
        .detail_ {
            margin: 0 28rpx;
            padding: 35rpx 26rpx;
            font-size: 26rpx;
            font-family: PingFang SC;
            font-weight: 400;
            color: #999999;
            background: #FAFAFA;
            border-radius: 35rpx;
            .title_ {
                font-size: 30rpx;
                font-family: PingFang SC;
                font-weight: bold;
                color: #333333;
            }
            .line_ {
                height: 2rpx;
                background: #F4F4F6;
                border-radius: 2rpx;
                margin: 32rpx 0 23rpx;
            }
        }
        .list_wrap_ {
            margin: 0 28rpx;
            padding: 35rpx 26rpx;
            background: #FAFAFA;
            border-radius: 35rpx;
            .title_ {
                font-size: 30rpx;
                font-family: PingFang SC;
                font-weight: bold;
                color: #333333;
            }
            .desc_ {
                margin: 18rpx 0 27rpx;
                font-size: 25rpx;
                font-family: PingFang SC;
                font-weight: 400;
                color: #999999;
            }
            .item_,
            .item_pj {
                background: #FFFFFF;
                border-radius: 17rpx;
                padding: 24rpx 28rpx;
                margin-bottom: 14rpx;
                .sub_title_ {
                    font-size: 30rpx;
                    font-family: PingFang SC;
                    font-weight: bold;
                    color: #9C733E;   
                                 }
                .sub_desc_ {
                    font-size: 26rpx;
                    font-family: PingFang SC;
                    font-weight: 600;
                    word-wrap: break-word;
                    word-break: break-all;
                    margin-top: 17rpx;
                }
                .sub_adminReply {
                    color: rgb(226, 199, 143);
                    width: calc(100% - 89rpx);
                    word-wrap: break-word;
                    word-break: break-all;
                    padding-left: 80rpx;
                    padding-top: 10rpx;
                }
                .sub_listReply {
                    width: calc(100% - 89rpx);
                    padding-left: 89rpx;
                    padding-top: 10rpx;
                    word-wrap: break-word;
                    position: relative;
                    word-break: break-all;
                    .replyNick {
                        display: inline;
                    }
                }
            }
            &.other_course_ {
                .title_ {
                    margin-bottom: 28rpx;
                }
            }
            &.course_list_ {
                .sub_desc_ {
                    color: #9C733E;
                }
            }
            &.comment_ {
                position: relative;
                .icon-image {
                    width: 69rpx;
                    height: 69rpx;
                    margin-right: 20rpx;
                    vertical-align: top;
                    float: left;
                }
                .input_wrap_ {
                    display: flex;
                    .left_ {
                        flex: 1;
                    }
                }
                .input_comment_ {
                    height: 79rpx;
                    padding-left: 36rpx;
                    background: #fff;
                    border: 2rpx solid #E3E3E3;
                    border-radius: 17rpx;
                    margin-bottom: 21rpx;
                    &::after {
                        display: none;
                    }
                }
                .btn_submit_comment_ {
                    font-size: 25rpx;
                    font-family: PingFang SC;
                    font-weight: 500;
                    color: #9C733E;
                    width: 124rpx;
                    height: 79rpx;
                    line-height: 79rpx;
                    background: linear-gradient(90deg, #EAD19C, #E5C27C);
                    border-radius: 17rpx;
                }
                .btn_comment_ {
                    position: absolute;
                    top: 39rpx;
                    right: 30rpx;
                    font-size: 21rpx;
                    font-family: PingFang SC;
                    font-weight: bold;
                    color: #D1AF6B;
                    .img_ {
                        width: 27rpx;
                        height: 22rpx;
                        margin-right: 10rpx;
                        vertical-align: middle;
                    }
                }
                .title_ {
                    margin-bottom: 28rpx;
                }
                .item_pj {
                    display: flex;
                    flex-direction: column;
                }
                .item_header {
                    display: flex;
                    justify-content: space-around;
                }
                .item_ {
                    display: flex;
                    justify-content: space-between;
                    align-items: flex-end;
                    .sub_desc_ {
                        color: #999999;
                    }
                }
                .intro_ {
                    display: inline-block;
                    width: calc(100% - 99rpx);
                }
                .btn_like_ {
                    width: 28rpx;
                    height: 26rpx;
                    margin-left: 20rpx;
                }
            }
        }
    }
</style>

<script>
    import wepy from '@wepy/core';
    import api from '@/utils/api';
    // import shareMixin from '@/mixins/share'
    import {
        KEY_IS_LOGIN,
        USER_ID
    } from '@/utils/constant';
    let systemInfo = wx.getSystemInfoSync();
    const statusBarHeight = systemInfo.statusBarHeight;
    var curPages = getCurrentPages();
    const userId = wx.getStorageSync(USER_ID);
    wepy.page({
        data: {
            commentText: '',
            userId,
            showComment: false,
            videoUrl: '',
            statusBarHeight,
            src: '',
            type: 2,
            menus: [{
                name: '课程介绍',
                value: 1
            }, {
                name: '课程列表',
                value: 2
            }, {
                name: '讨论区',
                value: 3
            }, ],
            detailInfo: {},
            medioInfo: {},
            teacherInfo: {},
            comments: [],
            attentioned: false,
            imgUrl: '',
            shareBol: false,
            title: '',
            sharePoster: '',
            querys: {},
            id: '',
            nicknameArr: [],
            root: '',
            showMask: false,
            parentId: '',
            rootId: '',
            replyOder: '',
            replycomment: "",
            commit: 2,
            index: 0,
            item: {},
            avatarUrl: ''
        },
        // mixins: [shareMixin],
        onShareAppMessage(res) {
            if (res.from == 'button') {
                return {
                    title: this.title,
                    imageUrl: this.imgUrl // 图片 URL
                }
            } else {
                return {
                    title: decodeURI(this.title),
                    path: '',
                    imageUrl: this.imgUrl
                }
            }
        },
        onReady() {
            this.videoContext = wx.createVideoContext('myVideo');
        },
        onLoad(query) {
            if (query.scene) { // options 中的 scene 需要使用 decodeURIComponent 才能获取到生成二维码时传入的 scene
                var scene = decodeURIComponent(query.scene)
                var item = scene.split("=");
                var params = {
                    id: item[1]
                }
                this.querys = params
            } else {
                this.querys = query
            }
            const {
                id
            } = this.querys;
            this._id = id;
            this.id = id
            this.queryMySchoolCourseById(parseInt(id));
        },
        onShow() {
            // 登录后返回该页面取值
            this.userId = wx.getStorageSync(USER_ID);
            this.avatarUrl = wx.getStorageSync('avatarUrl') || 'http://image.run4wd.com/newBee/userAvatar/0.png?it=3836598551537'
            if (!this.userId) {
                return
            }
            api.queryAttentionList(this.userId).then(res => res.data).then(data => {
                let si = setInterval(() => {
                    if (this.detailInfo.tutorId) {
                        clearInterval(si);
                        this.attentioned = data.content.filter(item => item.tutorId == this.detailInfo.tutorId).length > 0;
                    }
                }, 100);
            })
            this.scTimer = new Date().getTime()
        },
        onUnload () {
            let duration = new Date().getTime() - this.scTimer;
            // 引入 SDK 之后才可以这样使用
            getApp().sensors.track('neebees_applets_course_vedio', {
                course_name: this.detailInfo.title,
                course_lesson_name: this.sc_course_lesson_name.join(','),
                course_teacher: this.detailInfo.tutorName,
                duration: duration
            })
        },
        created(e) {
            curPages = getCurrentPages();
        },
        filters: {},
        methods: {
            filterName(id) {
                if (id == '') {
                    return ''
                }
                return this.nicknameArr.filter(item => item.id == id)[0].nickname
            },
            onShareTimeline(res) {
                return {
                    title: this.data.title,
                    imageUrl: this.data.sharePoster, // 图片 URL
                }
            },
            shareClick() {
                this.shareBol = !this.shareBol
            },
            handlePlay() {
                if (!this.isLogined()) {
                    this.videoContext.pause();
                }
            },
            handleVideoEnded() {
                this.finishViewVideo({
                    cuswebuserid: this.userId,
                    status: 2,
                    videoId: this._videoId,
                }).then(data => {
                    if (data.content == 'integralPlusOne') {
                        this.toast('完成观看，积分+1')
                    }
                })
            },
            finishViewVideo(params) {
                return api.finishViewVideo(params).then(res => res.data)
            },
            handleLike(item, index) {
                this.trackEvent('课程', '讨论区', `讨论区`);
                if (item.liked) {
                    api.cancelLike({
                        cuswebuserid: this.userId,
                        userCourseId: item.id
                    }).then(res => {
                        if (index) {
                            item.liked = false;
                            this.comments[index].children.map(c => {
                                if (item.id == c.id) {
                                    c.liked = false
                                    c.likeNumber = (c.likeNumber || 1) - 1
                                }
                                return {
                                    ...c
                                }
                            })
                        } else {
                            item.liked = false;
                            this.comments = this.comments.map(c => {
                                if (item.id == c.id) {
                                    c.liked = false
                                    c.likeNumber = (c.likeNumber || 1) - 1
                                }
                                return {
                                    ...c
                                }
                            })
                        }
                        // this.comments = [...this.comments];
                    })
                    return
                }
                api.addLike({
                    cuswebuserid: this.userId,
                    userCourseId: item.id
                }).then(res => {
                    if (index) {
                        item.liked = true;
                        this.comments[index].children.map(c => {
                            if (item.id == c.id) {
                                c.liked = true
                                c.likeNumber = (c.likeNumber || 1) - 1
                            }
                            return {
                                ...c
                            }
                        })
                    } else {
                        item.liked = true;
                        this.comments = this.comments.map(c => {
                            if (item.id == c.id) {
                                c.liked = true
                                c.likeNumber = (c.likeNumber || 0) + 1
                            }
                            return {
                                ...c
                            }
                        })
                    }
                })
            },
            cancelAttention() {
                api.cancelAttention({
                    cuswebuserid: this.userId,
                    tutorId: this.detailInfo.tutorId
                }).then(res => {
                    this.attentioned = false
                })
            },
            handleAttention() {
                if (this.attentioned) {
                    this.cancelAttention()
                    return
                }
                this.trackEvent('课程', '关注', `${this.detailInfo.tutorName}`);
                api.attentionTeacher({
                    cuswebuserid: this.userId,
                    tutorId: this.detailInfo.tutorId
                }).then(res => res.data).then(data => {
                    this.attentioned = true
                })
            },
            toast(title) {
                wx.showToast({
                    title, //提示的内容,
                    icon: 'none', //图标
                    duration: 3000
                })
            },
            handleCommentBlur(e) {
                const content = this.commentText;
                if (this._st) {
                    this.toast('每三分钟只能发一次');
                    return
                }
                if (content.length < 10) {
                    this.toast('评论最少10个字');
                    return
                }
                this._st = setTimeout(() => {
                    clearTimeout(this._st);
                    this._st = null
                }, 3 * 60 * 1000);
                this.showComment = false;
                const params = {
                    courseId: this._id,
                    cuswebuserid: this.userId,
                    evaluation: content,
                    likeNumber: 0,
                    highQuality: 0,
                    orderNumber: this.comments.length + 1,
                };
                this.addComment(params);
                this.trackEvent('课程', '讨论区', `讨论区-${content}`);
            },
            addComment(params, bol) {
                api.addComment(params).then(res => res.data).then(data => {
                    this.showComment = false
                    this.commentText = '';
                    this.replycomment = ''
                    this.showMask = false
                    this.queryCommentByCId(this.detailInfo.id, bol);
                })
            },
            playCourse(item) {
                this.trackAutoEvent(item);
                this.trackEvent('课程', '课程列表', `${this.detailInfo.title}-${item.videoName}`);
                this.videoUrl = item.videoUrl;
                this._videoId = item.id;
                // 播放音频
                if (this.detailInfo.courseType == 2) {
                    this.medioInfo = {
                        fullName: item.videoName,
                        name: item.videoName.substr(0, 6),
                        poster: this.detailInfo.videoCoverUrl,
                        author: this.detailInfo.tutorName,
                        src: this.videoUrl
                    };
                }
            },
            isLogined() {
                if (!wx.getStorageSync(KEY_IS_LOGIN)) {
                    wx.showToast({
                        title: '请先登录',
                        icon: 'none',
                        duration: 3000
                    });
                    this.$navigate('login');
                    return false
                }
                return true;
            },
            handleCourseChange(item) {
                if (this.isLogined()) {
                    this.playCourse(item);
                }
            },
            queryMySchoolCourseById(id) {
                return api.queryMySchoolCourseById(id).then(res => res.data).then(data => {
                    this.detailInfo = data.content;
                    const courseList = this.detailInfo.mySchoolVideoList;
                    this.sharePoster = this.detailInfo.sharePoster;
                    this.imgUrl = this.detailInfo.videoCoverUrl
                    this.title = this.detailInfo.title
                    if (courseList && courseList.length < 1) {
                        this.toast('敬请期待，马上就来~');
                    } else {
                        this.playCourse(courseList[0]);
                    }
                    this.queryMySchoolTutor(this.detailInfo.tutorId);
                })
            },
            trackAutoEvent(item) {
                (this.sc_course_lesson_name = (this.sc_course_lesson_name|| [])).push(item.videoName);
                getApp().sensors.track('newbees_applets_course', {
                    course_name: this.detailInfo.title,
                    course_lesson_name: item.videoName,
                    course_teacher: this.detailInfo.tutorName
                });
            },
            queryMySchoolTutor(id) {
                api.queryMySchoolTutor(id).then(res => res.data).then(data => {
                    this.teacherInfo = data.content;
                });
            },
            queryCommentByCId(id, bol) {
                const p = api.queryLike({
                    courseId: this._id,
                    cuswebuserid: this.userId
                }).then(res => res.data)
                const p1 = api.queryCommentByCId(id).then(res => res.data);
                Promise.all([p, p1]).then(res => {
                    const [data, data1] = res;
                    const arr = data.content.map(item => {
                        return item.userCourseId
                    });
                    let comments = data1.content.map(item => {
                        return {
                            ...item,
                            liked: arr.indexOf(item.id) > -1 ? true : false
                        }
                    })
                    this.analysisList(comments, bol)
                })
            },
            analysisList(comments, bol) {
                let list = []
                this.nicknameArr = []
                comments.forEach(element => {
                    let obj = {
                        id: element.id,
                        nickname: element.nickname
                    }
                    element.createTime = this.formatDate(element.createTime)
                    element.commit = 2
                    this.nicknameArr.push(obj)
                    if (!element.rootId) {
                        list.push(element)
                    }
                });
                // list.forEach(element => {
                //     let children = comments.filter(item => item.rootId == element.id)
                //     element.children = this.sortArr(children)
                // })
                this.comments = list
            },
            sortArr(arr) {
                arr.forEach(element => {
                    element.idNick = this.filterName(element.id)
                    element.parentIdNick = this.filterName(element.parentId)
                })
                return arr.sort(function(a, b) { //callback
                    if (a.replyOder > b.replyOder) { // a b 分别是Arr中的 56 21
                        return 1 //返回正数 ，b排列在a之前
                    } else {
                        return -1 //返回负数 ，a排列在b之前
                    }
                })
            },
            jumpTo(url) {},
            handleMenuChange(val, index, item) {
                this.trackEvent('课程', '标签栏', item.name);
                this.type = val;
                if (val == 3) {
                    this.queryCommentByCId(this.detailInfo.id)
                }
                if (val == 4) {
                    this.queryCommentByCId(this.detailInfo.id)
                }
            },
            replyCommentsTwo() {
                this.root = '请输入对课程的评价'
                this.showMask = true
                this.replycomment = ''
            },
            replyComments(items, item, index) {
                this.index = index
                if (item) {
                    this.rootId = item.id
                    this.replyOder = item.children.length + 1
                } else {
                    this.rootId = items.id
                    this.replyOder = 0
                }
                this.item = item
                this.root = this.filterName(items.id)
                this.parentId = items.id
                this.showMask = true
                this.replycomment = ''
            },
            replyFn(comments) {
                const params = {
                    courseId: this._id,
                    cuswebuserid: this.userId,
                    evaluation: comments,
                    parentId: this.parentId,
                    rootId: this.rootId,
                    replyOder: this.replyOder,
                    likeNumber: 0,
                    orderNumber: this.comments.length + 1,
                    highQuality: 0
                };
                this.addComment(params, true);
            },
            formatDate(date) {
                date = new Date(date);
                var ds = new Date();
                var nowYear = ds.getFullYear();
                var y = date.getFullYear();
                var m = date.getMonth() + 1;
                m = m < 10 ? '0' + m : m;
                var d = date.getDate();
                d = d < 10 ? ('0' + d) : d;
                if (nowYear == y) {
                    return m + '-' + d;
                } else {
                    return y + '-' + m + '-' + d;
                }
            },
            hide(event) {
                if (event.target.id == 'Mask') {
                    this.showMask = false
                }
            },
            showMore(item, index, bol) {
                this.comments.forEach(element => {
                    element.commit = 2
                });
                let indexitem = this.comments[index]
                let length
                if (bol) {
                    length = indexitem.children.length + 1
                } else {
                    length = indexitem.children.length
                }
                let items = {
                    ...indexitem,
                    commit: length
                }
                this.$set(this.comments, index, items)
            },
            pause() {},
            waiting() {},
            error() {}
        }
    })
</script>

<config>
{
  "navigationBarTitleText": "wepy",
  "usingComponents": {
    menus: '~@/components/menus',
    share: '~@/components/share',
    courseList: '~@/components/courseList',
    topNavBar: '~@/components/topNavBar',
    customAudio: '~@/components/customAudio',
    replyComments: '~@/components/replyComments',
  }
}
</config>