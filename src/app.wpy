<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
page {
  min-height: 100%;
}
.page_ {
  min-height: 100vh;
}
</style>

<script>
import wepy from '@wepy/core';
import eventHub from './common/eventHub';
import MyPlugin from './plugins/common';
import sensors from 'sa-sdk-miniprogram';

wepy.use(MyPlugin);
// "https://sc8106.ssish.com/sa?project=production"; //生产环境地址
// "https://sc8106.ssish.com/sa"; //测试环境地址

sensors.setPara({
  autoTrack:{ 
    appLaunch: true, // 默认为 true，false 则关闭 $MPLaunch 事件采集
    appShow: true, // 默认为 true，false 则关闭 $MPShow 事件采集
    appHide: true, // 默认为 true，false 则关闭 $MPHide 事件采集
    pageShow: true, // 默认为 true，false 则关闭 $MPViewScreen 事件采集
    pageShare: true, // 默认为 true，false 则关闭 $MPShare 事件采集
    mpClick: false, // 默认为 false，true 则开启 $MPClick 事件采集 
    mpFavorite: true // 默认为 true，false 则关闭 $MPAddFavorites 事件采集
  },
  name: 'sensors',
  server_url: 'https://sc8106.ssish.com/sa?project=production',
  // 全埋点控制开关
  autoTrack: {},
  // 自定义渠道追踪参数，如source_channel: ["custom_param"]
  source_channel: [],
  // 是否允许控制台打印查看埋点数据(建议开启查看)
  show_log: true,
  // 是否允许修改 onShareAppMessage 里 return 的 path，用来增加(登录 ID，分享层级，当前的 path)，在 app onShow 中自动获取这些参数来查看具体分享来源、层级等
  allow_amend_share_path: true
});
wepy.app({
  hooks: {
    // App 级别 hook，对整个 App 生效
    // 同时存在 Page hook 和 App hook 时，优先执行 Page hook，返回值再交由 App hook 处
    'before-setData': function (dirty) {
      // console.log('setData dirty: ', dirty);
      return dirty;
    }
  },
  globalData: {
    userInfo: null
  },

  onLaunch() {
    this.startTrack(sensors)
    this.testAsync();
    eventHub.$on('app-launch', (...args) => {
      console.log('app-launch event emitted, the params are:');
      console.log(args);
    });
  },

  methods: {

    sleep (s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    },

    async testAsync () {
      let d = await this.sleep(3);
      console.log(d);
    }
  }
});
</script>
<config>
{
    pages: [
      'pages/index',
      'pages/home',
      'pages/detail',
      'pages/search',
      'pages/my',
      'pages/mxtHome',
      'pages/login',
      'pages/webview',
      'pages/downloadImg',
      'pages/uploadImg'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'my蜂乐',
      navigationBarTextStyle: 'black',
      navigationStyle: 'custom'
    },
  "tabBar": {
    "custom": true,
    "color": "black",
    "selectedColor": "black",
    "backgroundColor": "#fff",
    "list": [{
      "pagePath": "pages/mxtHome",
      "text": "首页"
    }, {
      "pagePath": "pages/index",
      "text": "学习"
    }, {
      "pagePath": "pages/my",
      "text": "我的"
    }]
  },
  "usingComponents": {}
}
</config>
